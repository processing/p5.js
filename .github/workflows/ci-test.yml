name: Testing

on:
  push:
    branches:
      - main
      - dev-2.0
  pull_request:
    branches:
      - '*'

jobs:
  test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            browser: chrome
          # - os: windows-latest
          #   browser: chrome

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      
      - name: Verify Chrome (Ubuntu)
        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'chrome'
        run: |
          google-chrome --version

      - name: Verify Chrome (Windows)
        if: matrix.os == 'windows-latest' && matrix.browser == 'chrome'
        run: |
          & "C:\Program Files\Google\Chrome\Application\chrome.exe" --version
      
      - name: Get node modules
        run: npm ci
        env:
          CI: true

      - name: Build and test (Ubuntu)
        id: test
        if: matrix.os == 'ubuntu-latest'
        run: npm test -- --project=unit-tests
        continue-on-error: true
        env:
          CI: true

      - name: Generate Visual Test Report
        if: always()
        run: node visual-report.js
        env:
          CI: true
      - name: Upload Visual Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-report
          path: test/unit/visual/visual-report.html
          retention-days: 14
      - name: generate TypeScript types
        run: npm run generate-types
        env:
          CI: true
      - name: test TypeScript types
        run: npm run test:types
        env:
          CI: true
      - name: report test coverage
        if: steps.test.outcome == 'success'
        run: bash <(curl -s https://codecov.io/bash) -f coverage/coverage-final.json
        env:
          CI: true
      - name: fail job if tests failed
        if: steps.test.outcome != 'success'
        run: exit 1